version: '3'
services:
  discovery-service:
    container_name: discovery-service
    build:
      context: ../DiscoveryService
      dockerfile: Dockerfile
    networks:
      - spring-cloud-network
    depends_on:
      - vault
    environment:
      - VAULT_ADDR=http://vault:8200
    entrypoint: [ "sh", "-c", "sleep 5; java -jar app.jar" ]

  vault:
    container_name: vault
    image: hashicorp/vault:latest
    ports:
      - 8200:8200
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=root
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    volumes:
      - ./vault/data:/vault/data
      - ./vault/config:/vault/config
      - ./vault/vault-startup.sh:/app/vault-startup.sh
    command: "sh /app/vault-startup.sh"
    networks:
      - spring-cloud-network

  auth-service:
    container_name: auth-service
    build:
      context: ../AuthService
      dockerfile: Dockerfile
    networks:
      - spring-cloud-network
    depends_on:
      - vault
    environment:
      - VAULT_ADDR=http://vault:8200
    entrypoint: [ "sh", "-c", "sleep 5; java -jar app.jar" ]

  auth-service-postgres:
    container_name: auth-service-postgres
    image: postgres:17.2
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: auth-service
    networks:
      - spring-cloud-network
    volumes:
      - auth-service-postgres-data:/var/lib/postgresql/data

  gateway:
    container_name: gateway
    build:
      context: ../Gateway
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    networks:
      - spring-cloud-network
    depends_on:
      - vault
    environment:
      - VAULT_ADDR=http://vault:8200
    entrypoint: [ "sh", "-c", "sleep 5; java -jar app.jar" ]

networks:
  spring-cloud-network:
    driver: bridge

volumes:
  auth-service-postgres-data:
